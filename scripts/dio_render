#!/usr/bin/env bash 
# https://devilgate.org/blog/2012/07/02/tip-using-pandoc-to-create-truly-standalone-html-files
: "${PATH_BASE:="$(git rev-parse --show-toplevel)"}" 
path_content="${PATH_BASE}"/content
path_rendered="${PATH_BASE}"/rendered

_pre_render() {
  path_readme="${1}"
  file_readme="${2}"
  # code <pre> add <br>
  # tr "\n" "|" < ${file_readme}  | grep -o '<pre>.*</pre>'
  # pics

}

_post_render() {
  file_index_html="${1}"
  sed -i 's|<br /> </code>|</code>|g' "${file_index_html}" 
}

_render_blog() {
  path_readme="${1}"
  file_readme="${2}"
  _render ${1} ${2} 
}

_render() {
  path_readme="${1}"
  file_readme="${2}"
  file_index_html=${path_readme}/index.html
  title=$(sed -i -e '1 w /dev/stdout' "${file_readme}")
  title="${title:2}" 
  base=$(echo "${file_readme}" | awk -F "/" '{print $1}')
  if [[ "${base}" = "cs" ]]; then
    sed -i '1s/^/[vim](http:\/\/cs\.divramod\.io\/vim) [git](http:\/\/cs\.divramod\.io\/git)\n\n/' "${file_readme}" 
  fi 
  echo "file_readme: ${file_readme}, title: ${title}" 
  echo $(
    # https://github.com/pandoc/dockerfiles
    _pre_render ${1} ${2} 
    docker run \
      --rm \
      --volume "`pwd`:/data" \
      --volume "${PATH_BASE}/assets":"/assets" \
      pandoc/core:latest \
        --standalone \
        --metadata pagetitle="${title}" \
        --highlight-style haddock \
        -f markdown+hard_line_breaks \
        -t html5 \
        -A /assets/html/footer.html \
        -H /assets/html/header.html \
        -H /assets/css/github1.css \
        -H /assets/css/copy.css \
        "${file_readme}"
  ) > "${file_index_html}"
  _post_render "${file_index_html}" 
  # cat ${file_index_html} 
  # sed -i 's|<code .*><br /> ||g' "${file_index_html}" 
  # sed -i 's|<code class="code hljs lang-javascript"><br /> |</code>|g' "${file_index_html}" 
}

render() {
  rm -rf "${path_rendered}" 
  cp -r "${path_content}" "${path_rendered}" 
  cd "${path_rendered}" 
  for path_dir in $(find -type d -name "*" 2>/dev/null); do
    path_readme="${path_dir:2}"
    file_readme="${path_dir:2}"/README.md
    if [[ -f "${file_readme}" ]]; then
      area=$(echo "${path_readme}" | awk -F "/" '{print $1}')
      case $area in
        blog ) _render_blog "${path_readme}" "${file_readme}";;
        # *) _render "${path_readme}" "${file_readme}";;
      esac 
    fi
  done
}

render
