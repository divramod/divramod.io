#!/usr/bin/env bash 
# https://devilgate.org/blog/2012/07/02/tip-using-pandoc-to-create-truly-standalone-html-files
: "${PATH_BASE:="$(git rev-parse --show-toplevel)"}" 
path_content="${PATH_BASE}"/content
path_rendered="${PATH_BASE}"/rendered
path_web="${HOME}/art/me/web"

_blog_toc() {
  local file_blog_readme="${path_rendered}"/blog/README.md
  local path_blog_publish="${path_rendered}"/blog/publish
  local path_blog_archive="${path_rendered}"/blog/archive
  local path_blog_inprogress="${path_rendered}"/blog/inprogress
  # _blog_toc_helper "${file_blog_readme}" "${path_blog_publish}" "publish" "published"
  _blog_toc_helper "${file_blog_readme}" "${path_blog_inprogress}" "inprogress" "in progress"
  cat ${file_blog_readme} 
}

_blog_toc_helper() {
  local file_blog_readme="${1}"
  local path_blog_toc="${2}"
  local part="${3}"
  local text="${4}"
  echo >> "${file_blog_readme}"
  echo "# ${text} posts" >> "${file_blog_readme}"
  cd "${path_blog_toc}"
  for file in $(find . -type f -name "README.md" | sort -r 2>/dev/null); do
    local line_first=$(head -n 1 "${file}")
    local subpath_help=${file:2}
    local subpath=${subpath_help%/README.md} 
    local date_blog=${subpath:0:4}.${subpath:4:2}.${subpath:6:2}
    echo "- ${date_blog}: [${line_first:2}](${part}/${subpath}/index.html)" >> "${file_blog_readme}" 
  done
}

_pre_render() {
  path_readme="${1}"
  file_readme="${2}"

  # --- [code]
  sed -i -E 's|```(.+)$|<div><code class="code hljs \1">|g' "${file_readme}" 
  sed -i -E 's|```$|</code></div>|g' "${file_readme}" 
  sed -i -E 's|^\#(.*)$|HEADERLINE\n\#\1|g' "${file_readme}" 
  # sed -i -E 's|^\#(.*)$|\n\#\1\nHEADERLINE|g' "${file_readme}" 
  sed -i 's|^$|NEWLINE|g' "${file_readme}" 
  sed -i -e 's|^        |\&nbsp;\&nbsp;\&nbsp;\&nbsp;\&nbsp;\&nbsp;\&nbsp;\&nbsp;|g' "${file_readme}" 
  sed -i -e 's|^      |\&nbsp;\&nbsp;\&nbsp;\&nbsp;\&nbsp;\&nbsp;|g' "${file_readme}" 
  sed -i -e 's|^    |\&nbsp;\&nbsp;\&nbsp;\&nbsp;|g' "${file_readme}" 
  sed -i -e 's|^  |\&nbsp;\&nbsp;|g' "${file_readme}" 
  sed -i 's|HEADERLINE||g' "${file_readme}" 
  sed -i 's|NEWLINE|\&nbsp;|g' "${file_readme}" 
  # sed -i '/^$/d' ${file_readme} 
  # sed -i -E 's|(.+)|<div><code class="code hljs \1">|g' "${file_readme}" 
  # cat "${file_readme}" 

  # --- TODO [pics]

}

_post_render() {
  file_index_html="${1}"

  # --- [code]   
  sed -i 's|<br /> </code>|</code>|g' "${file_index_html}" 
  for (( i = 0; i < 5; i++ )); do
    sed -i -E 's|<code class="code hljs (.+)"><br /> |<code class="code hljs \1">|g' "${file_index_html}" 
  done 
  sed -i 's|<br /> |<br />|g' "${file_index_html}" 

}

_render_blog() {
  path_readme="${1}"
  file_readme="${2}"
  _render ${1} ${2} 
}

_render() {
  path_readme="${1}"
  file_readme="${2}"
  file_index_html=${path_readme}/index.html
  title=$(sed -i -e '1 w /dev/stdout' "${file_readme}")
  title="${title:2}" 
  base=$(echo "${file_readme}" | awk -F "/" '{print $1}')
  if [[ "${base}" = "cs" ]]; then
    sed -i '1s/^/[vim](http:\/\/cs\.divramod\.io\/vim) [git](http:\/\/cs\.divramod\.io\/git)\n\n/' "${file_readme}" 
  fi 
  echo "file_readme: ${file_readme}, title: ${title}" 
  _pre_render "${path_readme}" ${file_readme} 
  echo $(
    # https://github.com/pandoc/dockerfiles
    docker run \
      --rm \
      --volume "`pwd`:/data" \
      --volume "${PATH_BASE}/assets":"/assets" \
      pandoc/core:latest \
        --standalone \
        --metadata pagetitle="${title}" \
        --highlight-style haddock \
        -f markdown+hard_line_breaks \
        -t html5 \
        -A /assets/html/footer.html \
        -H /assets/html/header.html \
        -H /assets/css/github1.css \
        -H /assets/css/copy.css \
        "${file_readme}"
  ) > "${file_index_html}"
  # cat "${file_index_html}"
  _post_render "${file_index_html}" 
}

run() {
  if [[ -d "${path_web}" ]]; then
    rm -rf "${path_content}"
    cp -r "${path_web}" "${path_content}"
  fi 
  rm -rf "${path_rendered}" 
  cp -r "${path_content}" "${path_rendered}" 
  _blog_toc
  cd "${path_rendered}" 
  for path_dir in $(find . -type d -name "*" 2>/dev/null); do
    path_readme="${path_dir:2}"
    file_readme="${path_dir:2}"/README.md
    if [[ -f "${file_readme}" ]]; then
      area=$(echo "${path_readme}" | awk -F "/" '{print $1}')
      case $area in
        blog ) _render_blog "${path_readme}" "${file_readme}";;
        *) _render "${path_readme}" "${file_readme}";;
      esac 
    fi
  done
}

run
